template<class T>
void Heap<T>::push(T item){
    if (count == capacity) {
        ensureCapacity(capacity * 2);
    }
    count++;
    elements[count-1] = item;
    reheapUp(count - 1);
}

template<class T>
void Heap<T>::ensureCapacity(int minCapacity){
    T* newElements = new T[minCapacity];
    for (int i = 0; i < count; i++) {
        newElements[i] = elements[i];
    }
    elements = newElements;
    capacity = minCapacity;
}

template<class T>
void Heap<T>::reheapUp(int position){
    if (position <= 0 || position >= count) return;
    int parent = (position - 1) / 2;
    if (elements[position] > elements[parent]) {
        swap(elements[position], elements[parent]);
        reheapUp(parent);
    }
}